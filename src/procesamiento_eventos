import os
import pandas as pd
import re
from datetime import datetime
from unidecode import unidecode

INPUT_PATH = os.path.join("data", "clean", "events_athletiks_unificado.csv")
OUTPUT_PATH = os.path.join("data", "clean", "events_athletiks_limpio.csv")
os.makedirs(os.path.dirname(OUTPUT_PATH), exist_ok=True)

MESES = {
    "enero": 1, "febrero": 2, "marzo": 3, "abril": 4, "mayo": 5, "junio": 6,
    "julio": 7, "agosto": 8, "septiembre": 9, "octubre": 10, "noviembre": 11, "diciembre": 12,
    "gener": 1, "febrer": 2, "març": 3, "abril": 4, "maig": 5, "juny": 6,
    "juliol": 7, "agost": 8, "setembre": 9, "octubre": 10, "novembre": 11, "desembre": 12
}

def extraer_fecha(archivo):
    archivo = archivo.lower().replace("-", " ").replace("_", " ")
    match = re.search(r"(\d{1,2})\s+de\s+(\w+)\s+del\s+(\d{4})", archivo)
    if match:
        dia, mes, anio = match.groups()
        mes_num = MESES.get(mes, 0)
        if mes_num:
            return datetime(int(anio), mes_num, int(dia))
    return pd.NaT

def limpiar_nombre_evento(archivo):
    base = archivo.replace(".csv", "").replace("_", " ").replace("-", " ")
    return re.split(r"\s+\d{1,2}\s+de\s+\w+\s+del\s+\d{4}", base, flags=re.IGNORECASE)[0].strip().title()

def limpiar_datos():
    df = pd.read_csv(INPUT_PATH)

    # Renombrar columnas si existen
    renames = {
        "name": "ASISTENTE",
        "has_paid": "PAGADO",
        "price_paid": "PRECIO_PAGADO",
        "attendance_status": "ASISTIO"
    }
    df.rename(columns={k: v for k, v in renames.items() if k in df.columns}, inplace=True)

    # Normalizar nombre asistente
    df["ASISTENTE"] = df["ASISTENTE"].astype(str).str.strip().str.lower().apply(unidecode).str.upper()

    # Filtrar registros internos
    df = df[~df["ASISTENTE"].isin(["SISTERHOOD RUNNING CLUB", "SISTERHOOD RC ELCHE"])]

    # Normalizar booleanos
    df["PAGADO"] = df["PAGADO"].astype(str).str.lower().str.contains("true|si|sí|1", na=False)
    df["ASISTIO"] = df["ASISTIO"].astype(str).str.lower().str.contains("attended|confirmada|asistido", na=False)

    # Precio pagado (en float)
    df["PRECIO_PAGADO"] = pd.to_numeric(df.get("PRECIO_PAGADO", 0), errors="coerce").fillna(0)

    # Extraer fecha y nombre evento
    df["FECHA_EVENTO"] = df["ARCHIVO_ORIGEN"].apply(extraer_fecha)
    df["EVENTO"] = df["ARCHIVO_ORIGEN"].apply(limpiar_nombre_evento)

    # Calcular número de asistencias por persona
    df["NUM_ASISTENCIAS"] = df.groupby("ASISTENTE")["EVENTO"].transform("count")

    # Guardar CSV limpio
    columnas_finales = [
        "EVENTO", "FECHA_EVENTO", "COMUNIDAD", "ASISTENTE",
        "ASISTIO", "PAGADO", "PRECIO_PAGADO", "NUM_ASISTENCIAS"
    ]
    df[columnas_finales].to_csv(OUTPUT_PATH, index=False)
    print(f"✅ Datos limpios guardados en: {OUTPUT_PATH}")

if __name__ == "__main__":
    limpiar_datos()
